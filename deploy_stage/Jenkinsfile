#!/usr/bin/env groovy

node {
	try{

		notifyBuild('started')
		
		// Define Stages in jenkins

		stage('checkout') {
			checkout scm
		}

		stage ('Build and Push Docker images') {
			sh "chmod +x ./deploy_stage/update-docker-images.sh"
			sh "whoami"
			sshagent ( credentials: ['skillbuilder']) {
				sh "scp -o StrictHostKeyChecking=no -v ubuntu@10.0.2.65:/home/ubuntu/skillbuilder-app/secret/.env .env"
			}	
			sh "./deploy_stage/update-docker-images.sh"
		} 

		stage ("Deploy Application") {
			sshagent ( credentials: ['skillbuilder']) {
				sh "ssh -o StrictHostKeyChecking=no -l ubuntu 10.0.2.65 /home/ubuntu/skillbuilder-app/helper/app.sh"

			}
		}


	}
	catch (e)
	{
		// If there was an exception thrown, the build failed
		currentBuild.result = "FAILED"
		throw e 
	}
	finally {
		 // Success or failure, always send notifications
		  notifyBuild(currentBuild.result)
	}
}

def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"
  def details = """<p>STARTED: Job  for Skillbuilder App '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
    <p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>"""

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications to slack
  slackSend (color: colorCode, message: summary)
}

//ends here